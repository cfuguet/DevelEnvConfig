" VIM configuration file.
"
" Author:   Cesar Fuguet Tortolero

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'majutsushi/tagbar'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'godlygeek/tabular'
call vundle#end()


" Tagbar plugin options
nmap <F8> :TagbarToggle<CR>


" NERDTree plugin options
nmap <C-n> :NERDTreeToggle<CR>


" enable modelines
set modeline
set modelines=5                   " allow modelines in vim


" vim command-line related commands
set wildmenu
set wildmode=list:longest,list:full
set showcmd
set laststatus=2                  " always display the status line


" indentation related configuration
set bs=indent,eol,start " allow backspacing over everything in insert mode
set autoindent          " always set autoindenting on
set ts=4 sts=4 sw=4 noet sta
set cinoptions=(0,Ws,t0,p0,l1,N-s,g4,h4,i0

set display+=lastline
set history=50          " keep 50 lines of command line history
set ruler               " show the cursor position all the time
set viminfo='20,\"50    " read/write a .viminfo file, don't store more
                        " than 50 lines of registers


" VIM search configuration
set ignorecase smartcase


" VIM swapfiles configuration
set directory=~/.tmp,/var/tmp,.,/tmp


" call this function to use display-based motion on j,k keys
function SetDisplayBasedMotion()
  map <buffer> j gj
  map <buffer> k gk
endfunction


" Only do this part when compiled with support for autocommands
if has("autocmd")
  augroup redhat
	autocmd!
    autocmd FileType text set tw=0 lbr

    " When editing a file, always jump to the last cursor position
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal! g'\"" |
    \ endif

    autocmd VimResized * wincmd =
  augroup END

  augroup latex_config
	autocmd!
    autocmd FileType plaintex,tex set textwidth=0 wrap lbr nolist
    autocmd FileType plaintex,tex call SetDisplayBasedMotion()
  augroup END
endif

if has("cscope") && filereadable("/usr/bin/cscope")
   set csprg=/usr/bin/cscope
   set csto=0
   set cst
   set nocsverb
   " add any database in current directory
   if filereadable("cscope.out")
      cs add cscope.out
   " else add database pointed to by environment
   elseif $CSCOPE_DB != ""
      cs add $CSCOPE_DB
   endif
   set csverb
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set background=dark
  colorscheme solarized

  set hlsearch

  if has("gui_running")
    set guioptions-=T
    set guioptions-=l
    set guioptions-=L
    set guioptions-=R
    set guifont=Liberation\ Mono\ 11
  endif
endif


" VHDL indent plugin specific options

" option to disable alignment of generic/port mappings
let g:vhdl_indent_genportmap = 0

" option to disable alignment of right-hand side assignment "<=" statements
let g:vhdl_indent_rhsassign = 0

" }}}
